version: 2.1
orbs:
  go: circleci/go@3.0.2
  node: circleci/node@7.1.0

parameters:
  rebuild_cache:
    type: boolean
    default: false

# Configuration to pass to test and cache jobs
cfg: &cfg
  app_name: gobox

# Branches used for releasing code, pre-release or not
release_branches: &release_branches
  - main

jobs:
  build:
    executor:
      name: go/default # Use the default executor from the orb
      tag: "1.22.4" # Specify a version tag
    steps:
      - checkout
      - go/mod-download
      - run:
          name: build
          command: go build
      - go/save-build-cache
  test:
    executor:
      name: go/default
      tag: "1.22.4"
    steps:
      - checkout
      - go/mod-download
      - go/test:
          build_ldflags: "-X github.com/grevych/gobox/pkg/app.Version=testing"
          build_tags: gobox_test
          race: true
          verbose: true
      - go/save-build-cache
  release_dryrun:
    executor:
      name: go/default
      tag: "1.22.4"
    steps:
      - checkout
      - go/install-goreleaser
      - go/goreleaser-release:
          project-path: ~/project
          publish-release: false
          validate-yaml: true
  versioning:
    executor:
      name: node/default
    steps:
      - checkout
      - node/install:
          node-version: "latest"
      - node/install-packages
      - run:
          name: Generate Tag Version
          command: npx semantic-release --ci --debug
  release:
    executor:
      name: go/default
      tag: "1.22.4"
    steps:
      - checkout
      - run: curl -sfL https://goreleaser.com/static/run | bash

workflows:
  rebuild-cache:
    triggers:
      - schedule:
          # Every day at 00:00 UTC.
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - main
    jobs:
      - build

  manual-rebuild-cache:
    when: << pipeline.parameters.rebuild_cache >>
    jobs:
      - build

  main:
    jobs:
      - test
      - versioning:
          filters:
            branches:
              only: *release_branches
          serial-group: << pipeline.project.slug >>/deploy-group
          requires:
            - test
      - release:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.*)*/
      - release_dryrun:
          filters:
            branches:
              only: *release_branches
          requires:
            - versioning
