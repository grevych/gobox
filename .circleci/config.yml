version: 2.1
orbs:
  go: circleci/go@1.11.0
  shared: getoutreach/shared@2.27.0
  queue: eddiewebb/queue@3.1.4

parameters:
  rebuild_cache:
    type: boolean
    default: false

# Extra contexts to expose to all jobs below
contexts: &contexts
  - aws-credentials
  - ghaccesstoken
  - docker-registry
  - npm-credentials
  - vault-dev
  - confluence
  - circleci-credentials
  - tray-webhooks

# Configuration to pass to test and cache jobs
cfg: &cfg
  context: *contexts
  app_name: gobox

# Branches used for releasing code, pre-release or not
release_branches: &release_branches
  - "main"

jobs:
  build_and_test:
    executor:
      name: go/default # Use the default executor from the orb
      tag: "1.22.4" # Specify a version tag
    steps:
      - checkout # checkout source code
      - go/load-cache # Load cached Go modules.
      - go/mod-download # Run 'go mod download'.
      - go/save-cache # Save Go modules to cache.
      - run:
          name: Test
          command: go test -v -ldflags "-X github.com/grevych/gobox/pkg/app.Version=testing" -tags gobox_test ./...
  release_dryrun:
    machine:
      image: ubuntu-2204:2024.04.4
    steps:
      - run:
          name: Release (dry run)
          command: ./scripts/shell-wrapper.sh ci/release/dryrun.sh
  release:
    machine:
      image: ubuntu-2204:2024.04.4
    steps:
      - run:
          name: Release
          command: ./scripts/shell-wrapper.sh ci/release/release.sh

workflows:
  rebuild-cache:
    triggers:
      - schedule:
          # Every day at 00:00 UTC.
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - main
    jobs:
      - shared/save_cache: *cfg

  manual-rebuild-cache:
    when: << pipeline.parameters.rebuild_cache >>
    jobs:
      - shared/save_cache: *cfg

  test:
    jobs:
      - build_and_test
